<?xml version="1.0" encoding="UTF-8"?><record_update table="sp_widget">
    <sp_widget action="INSERT_OR_UPDATE">
        <category>custom</category>
        <client_script><![CDATA[function ($scope, $interval, spUtil) {
	var c=this;
	$interval (function(){
		spUtil.update($scope);
	}, c.options.widgetupdate);
}]]></client_script>
        <controller_as>c</controller_as>
        <css/>
        <data_table>sp_instance</data_table>
        <demo_data/>
        <description/>
        <docs/>
        <field_list/>
        <has_preview>true</has_preview>
        <id>abapstatus</id>
        <internal>false</internal>
        <link/>
        <name>ABAPStatus</name>
        <option_schema>[{"name":"widgetupdate","default_value":"60000","label":"Widget Update Time in Milliseconds","type":"integer"}]</option_schema>
        <public>false</public>
        <roles>x_agsa_sapcockpit.user</roles>
        <script><![CDATA[(function() {
  gs.include('ProMonitorLib');
  var promon=new ProMonitorLib();
	data.list=[];
	system=$sp.getParameter('system'); 
	instance=getInstances(system);
	if (instance.length == 0)
		data.list.push(promon.returnInfo('ABAP STACK Availability','ALL','INSTANCE_AVAILABILITY',system));

	for (var i=0;i<instance.length;i++) {
		objec={};
		objec.unit=instance[i].unit;
		myrval=promon.returnInfo(instance[i].unit,instance[i].unit,'INSTANCE_AVAILABILITY',system);
		objec.status=myrval.status;
		objec.url=myrval.url;
		objec.mem=getMemory(system,instance[i].unit);
		data.list.push(objec);		
	}
		
	function getMemory(system,target) {
		var str='',
		getMem=new GlideRecordSecure('x_agsa_sapcockpit_last_metric');
		getMem.addQuery('sid',system);
		getMem.addQuery('target',target);
		var qc = getMem.addQuery('name','EXTENDED_MEMORY_USAGE_RATIO');
		qc.addOrCondition('name','ROLLING_MEMORY_USED');
		qc.addOrCondition('name','HEAP_MEMORY_USAGE_RATIO');
		getMem.orderBy('name');
		getMem.query()
		while (getMem.next()) {
			if (getMem.name == 'ROLLING_MEMORY_USED')
					str+='R: '+getMem.value+' % ';
			if (getMem.name == 'EXTENDED_MEMORY_USAGE_RATIO')
					str+='E: '+getMem.value+' % ';
			if (getMem.name == 'HEAP_MEMORY_USAGE_RATIO')
					str+='H: '+getMem.value+' % ';
		}
		return str;
	}
	
	function getInstances(system) {
		var result=[];
		var getInstance=new GlideRecordSecure('x_agsa_sapcockpit_last_metric');
		getInstance.addQuery('sid',system);
		getInstance.addQuery('name','INSTANCE_AVAILABILITY');
		getInstance.query()
		while (getInstance.next()) {
			var objec={};
			objec.unit=getInstance.target.toString().toUpperCase();
			result.push(objec);
		}
		return result
	}

})();]]></script>
        <servicenow>false</servicenow>
        <sys_class_name>sp_widget</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2018-10-19 14:26:41</sys_created_on>
        <sys_customer_update>false</sys_customer_update>
        <sys_id>6f36f17c4f9923c033e71aabb110c781</sys_id>
        <sys_mod_count>71</sys_mod_count>
        <sys_name>ABAPStatus</sys_name>
        <sys_package display_value="SAPCockpit" source="x_agsa_sapcockpit">e8dd70d1dbcacb407bd0f13daf96199c</sys_package>
        <sys_policy/>
        <sys_replace_on_upgrade>false</sys_replace_on_upgrade>
        <sys_scope display_value="SAPCockpit">e8dd70d1dbcacb407bd0f13daf96199c</sys_scope>
        <sys_update_name>sp_widget_6f36f17c4f9923c033e71aabb110c781</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2018-11-01 14:33:20</sys_updated_on>
        <template><![CDATA[<link href="f989cff14f4a430033e71aabb110c71b.cssdbx?" rel="stylesheet" type="text/css" />
<table class='sstatus' sytle='width:30%;'>
	<thead>
		<tr>
			<th class="sstatus"><a href="javascript:void(0)" ng-click="sortType = 'Unit'; sortReverse = !sortReverse">ABAP Instance</a></th>
			<th class="sstatus"><a href="javascript:void(0)" ng-click="sortType = 'Target'; sortReverse = !sortReverse">Extended Heap Roll Memory</a></th>
 			<th class="sstatus"><a href="javascript:void(0)" ng-click="sortType = 'Value'; sortReverse = !sortReverse">Status</a></th>
		</tr>
	</thead>
	<tr ng-repeat="item in data.list | orderBy:sortType:sortReverse | filter:searchAlarm">
		<td class="sstatus"><a href="{{item.url}}" target="_blank">{{item.unit}}</a> </td>
 		<td class="sstatus">{{item.mem}}</td>
		<td class="sstatus" ng-if='item.status == "true"' style='background-color:#3bc999;text-align:center;'>OK</td>
		<td class="sstatus" ng-if='item.status == "false"' style='background-color:#c71f3b;text-align:center;'>FAILED</td>
 		<td class="sstatus" ng-if='item.status == ""' style='background-color:#c71f3b;text-align:center;'>NO DATA</td>
  </tr>
</table>
]]></template>
    </sp_widget>
</record_update>
